# comment
; comment
[mysql]
# host=localhost
# user=root
# password=poms@db

[mysqldump]
quick
max_allowed_packet = 64M

# Option group names are not case-sensitive
# `opt_name=value` you can have spaces around the = character, something that is not true on the command line
[mysqld]
# use default password authorization IMPORTANT!
default_authentication_plugin=mysql_native_password
basedir=D:/KWM/Base/MySQL
datadir={{{newPath}}}

# time zone
default-time-zone='+08:00'
# time_format, This system variable was removed in MySQL 8.0.3

# support federated engin
federated

# If it is OFF, mysqld resolves host names when checking client connections, If it is ON, mysqld uses only IP numbers
# skip_name_resolve=1

# The number of files that the operating system permits mysqld to open.
# platform dependent, Default Value 5000, with possible adjustment
open_files_limit=65535

# The maximum permitted number of simultaneous client connections. By default, this is 151. Maximum Value 100000
max_connections=5120

# If more than this many successive connection requests from a host are interrupted without a successful connection,
# the server blocks that host from further connections.
# The default is 100, Maximum Value (64-bit platforms) 18446744073709551615
max_connect_errors=1000000

# The number of open tables for all threads.
# Default Value (>= 8.0.4) 4000, Maximum Value 524288
table_open_cache=4000

# The number of table definitions that can be stored in the definition cache
# Default MIN(400 + table_open_cache / 2, 2000), Maximum Value 524288
# https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_table_definition_cache
table_definition_cache=4000

# The number of open tables cache instances.
# Default Value 16, Maximum Value 64
table_open_cache_instances=64

# The stack size for each thread
# The default of 192KB (256KB for 64-bit systems) is large enough for normal operation.
# Maximum Value (64-bit platforms) 18446744073709551615
thread_stack=1M

# Enable external locking (system locking), which is disabled by default.
# External locking affects only MyISAM table access.
external_locking=FALSE

# The maximum size of one packet or any generated/intermediate string
# The default is 64MB, The protocol limit for max_allowed_packet is 1GB
max_allowed_packet=64M

# Each session that must perform a sort allocates a buffer of this size.
# Default 256K, Maximum Value (Windows) 4GB-1 （）
sort_buffer_size=128M

# The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans.
# Default 256K, Maximum Value (Windows) 4GB-1 （）
join_buffer_size=128M

# How many threads the server should cache for reuse.
# The default value is based on the following formula `8 + (max_connections / 100)`
# Maximum Value 16384
# Normally, this does not provide a notable performance improvement if you have a good thread implementation.
thread_cache_size=768

# query_cache_size This system variable was removed in MySQL 8.0.3.
# query_cache_type This system variable was removed in MySQL 8.0.3.

# The number of seconds the server waits for activity on an interactive connection before closing it.
# Default Value 28800
interactive_timeout=600
# The number of seconds the server waits for activity on a noninteractive connection before closing it.
# On thread startup, the session wait_timeout value is initialized from the global wait_timeout value or from the global
# interactive_timeout value, depending on the type of client
wait_timeout=600

# The maximum size of internal in-memory temporary tables. This variable does not apply to user-created MEMORY tables.
# The actual limit is determined from whichever of the values of tmp_table_size and max_heap_table_size is smaller
# Increase the value of tmp_table_size (and max_heap_table_size if necessary) if you do many advanced GROUP BY queries and you have lots of memory.
# Default Value 16M
tmp_table_size=256M

# This variable sets the maximum size to which user-created MEMORY tables are permitted to grow.
# Default Value 16M
max_heap_table_size=256M

# The number of outstanding connection requests MySQL can have.
# You need to increase this only if you expect a large number of connections in a short period of time.
# default -1 (autosized, the value of max_connections) max value 65535
back_log=1024

# If not set default is `host_name.pid`
pid-file=kwm_mysql.pid

# =================== LOG SETTINGS ====
# https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html
# This variable controls the time zone of timestamps in messages written to the error log,
# and in general query log and slow query log messages written to files.
log_timestamps=SYSTEM

# error log destination
log-error={{{newPath}}}\error.log

# `log_warnings` This system variable was removed in MySQL 8.0.3. Use the log_error_verbosity system variable instead.
# The verbosity for handling events intended for the error log,
# as filtered by the log_filter_internal error log filter component.
# log_error_verbosity has no effect if log_filter_internal is not enabled.
# Error messages                        1
# Error and warning messages            2
# Error, warning, and note messages     3
# Default Value (>= 8.0.4) 2
log_error_verbosity=2


# If --log-output is omitted, the default logging destination is FILE.
# Whether the slow query log is enabled. The value can be 0 (or OFF) to disable the log or 1 (or ON) to enable the log.
# Default Value OFF
slow_query_log=1

# If you specify no name for the slow query log file, the default name is host_name-slow.log
slow_query_log_file={{{newPath}}}\slow_query.log

# If a query takes longer than this many seconds, the server increments the Slow_queries status variable.
# If the slow query log is enabled, the query is logged to the slow query log file.
# The minimum and default values of long_query_time are 0 and 10
long_query_time=5

# Queries that examine fewer than this number of rows are not logged to the slow query log.
min_examined_row_limit=100

# Include slow administrative statements in the statements written to the slow query log.
#Administrative statements include ALTER TABLE, ANALYZE TABLE, CHECK TABLE, CREATE INDEX, DROP INDEX, OPTIMIZE TABLE, and REPAIR TABLE.
log_slow_admin_statements=1

# When the slow query log is enabled, this variable enables logging for queries that have taken more than
# `long_query_time seconds` to execute on the slave.
# https://dev.mysql.com/doc/refman/8.0/en/replication-options-slave.html
log_slow_slave_statements=1

# Whether queries that do not use indexes are logged to the slow query log.
log_queries_not_using_indexes=1

# If `log_queries_not_using_indexes` is enabled, the `log_throttle_queries_not_using_indexes` variable limits the
# number of such queries per minute that can be written to the slow query log.
# A value of 0 (the default) means “no limit”.
log_throttle_queries_not_using_indexes=60


# ================== Binary log setting
# Note that the binary log format differs in MySQL 8.0 from previous versions of MySQL, due to enhancements in replication.
# https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html

# default is enable
log_bin=master-bin

# max_binlog_size max value is 1GB and default is 1GB
max_binlog_size=1GB

# server_id has default value for MySQL8 is 1
server_id=1

# row-based logging (the default) --binlog-format=ROW.
binlog_format=ROW

# binlog_cache_size default is 32768 bytes(x64) = 32M
binlog_cache_size=32M

# max_binlog_cache_size default 4GB, which is also the maximum
max_binlog_cache_size=4GB

# sync_binlog = 1 by default safest but also slowest
sync_binlog=1

# Specifies the number of days before automatic removal of binary log files. `expire_logs_days` is DEPRECATED!!!
# and will be removed in a future release.
# use binlog_expire_logs_seconds, which sets the binary log expiration period in seconds.
# default 2592000s => 30*24*60*60 => 30 days
# we need 7 days 7*24*60*60 = 604800
binlog_expire_logs_seconds=604800

# Replication Relay and Status Logs
# https://dev.mysql.com/doc/refman/8.0/en/replication-options-slave.html

#  --log-slave-updates is enabled by defaultDefault Value (>= 8.0.3) ON; Default Value (<= 8.0.2)OFF
log_slave_updates

# Enables automatic relay log recovery immediately following server startup.
# Default Value FALSE
relay_log_recovery=1

# Disable or enable automatic purging of relay logs as soon as they are no longer needed.
# Default Value TRUE
relay_log_purge=1

# 8.0 The default setting is TABLE
relay_log_info_repository=TABLE

# 8.0 The default setting is TABLE
master_info_repository=TABLE


# ====== Global Transaction ID Options and Variables
# https://dev.mysql.com/doc/refman/8.0/en/replication-options-gtids.html

# When enabled, the server enforces GTID consistency by allowing execution of only statements that can be safely logged using a GTID.
# You must set this option to ON before enabling GTID based replication.
# Default Value OFF
enforce_gtid_consistency=ON

# This option specifies whether global transaction identifiers (GTIDs) are used to identify transactions.
# Setting this option to --gtid-mode=ON requires that enforce-gtid-consistency be set to ON.
gtid_mode=ON

# MyISAM Options
# ignore!
# Index blocks for MyISAM tables are buffered and are shared by all threads.
# key_buffer_size

# key_buffer_size = 32M
# read_buffer_size = 8M
# read_rnd_buffer_size = 16M
# bulk_insert_buffer_size = 64M
# myisam_sort_buffer_size = 128M
# myisam_max_sort_file_size = 10G
# myisam_repair_threads = 1be aware


# This variable specifies the timeout in seconds for attempts to acquire metadata locks.
# default 31536000(1 year) also max value
lock_wait_timeout=3600

# This system  variable determines wheter the server enables certain nonstandard behaviors for default value and NULL value
# handling TIMESTAMP columns.
# by default this is enabled.
explicit_defaults_for_timestamp=ON

# This variable indicates the status of the Event Scheduler; possible values are ON, OFF, and DISABLED,
# with the default being ON.
event_scheduler=ON

# Binary Logging of Stored Programs
# https://dev.mysql.com/doc/refman/8.0/en/stored-programs-logging.html
# This variable applies when binary logging is enabled. It controls whether stored function creators can be trusted
# not to create stored functions that will cause unsafe events to be written to the binary log. If set to 0 (the default),
# users are not permitted to create or alter stored functions unless they have the SUPER privilege in addition to the CREATE ROUTINE or ALTER ROUTINE privilege.
log_bin_trust_function_creators=1

# set SQL mode
sql_mode=REAL_AS_FLOAT,PIPES_AS_CONCAT,IGNORE_SPACE,STRICT_TRANS_TABLES,TRADITIONAL


# ======= innoDB Options
# https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html
#
# InnoDB tries to keep the number of operating system threads concurrently inside InnoDB less than or equal
# to the limit given by this variable (InnoDB uses operating system threads to process user transactions).
# https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_thread_concurrency
innodb_thread_concurrency=40

# The number of times a thread waits for an InnoDB mutex to be freed before the thread is suspended.
# Default Value 30, Maximum Value 4294967295
innodb_sync_spin_loops=100

# The maximum delay between polls for a spin lock
# Default Value (64-bit platforms) 6, Maximum Value (64-bit platforms) 2**64-1
innodb_spin_wait_delay=30

# The size in bytes of the buffer pool, the memory area where InnoDB caches table and index data.
# Default Value (64-bit platforms) 134217728 (128M) Max value 2**64-1
innodb_buffer_pool_size={{{poolSize}}}G

# The number of regions that the InnoDB buffer pool is divided into.
# Default Value (Other) 8 (or 1 if innodb_buffer_pool_size < 1GB
innodb_buffer_pool_instances=16

# Specifies that, on MySQL server startup, the InnoDB buffer pool is automatically warmed up by loading the same pages it held at an earlier time.
# Typically used in combination with innodb_buffer_pool_dump_at_shutdown.
# Default ON
innodb_buffer_pool_load_at_startup=ON
innodb_buffer_pool_dump_at_shutdown=ON

# Defines the name, size, and attributes of InnoDB system tablespace data files.
# Syntax: file_name:file_size[:autoextend[:max:max_file_size]]
innodb_data_file_path=ibdata1:1G:autoextend

# Controls the balance between strict ACID compliance for commit operations and higher performance that is
# possible when commit-related I/O operations are rearranged and done in batches.
# Valid Value: 0,1,2; default 1
# The default value of 1 is required for full ACID compliance. With this value,
# the contents of the InnoDB log buffer are written out to the log file at each transaction commit and the log file is flushed to disk.
innodb_flush_log_at_trx_commit=1

# The size in bytes of the buffer that InnoDB uses to write to the log files on disk.
# if you have transactions that update, insert, or delete many rows, making the log buffer larger saves disk I/O.
# Default Value 16777216 (16MB)
innodb_log_buffer_size=64M

# The size in bytes of each log file in a log group.
# The larger the value, the less checkpoint flush activity is required in the buffer pool, saving disk I/O.
# Larger log files also make crash recovery slower
# default 48M, max 512GB
innodb_log_file_size=2G

# The number of log files in the log group.
# Default Value 2, Maximum Value 100
innodb_log_files_in_group=2

# Defines a threshold size for undo tablespaces.
# The default value is 1073741824 bytes (1024 MiB).
innodb_max_undo_log_size=4G

# The innodb_io_capacity parameter sets an upper limit on the number of I/O operations performed per second by InnoDB background tasks,
# such as flushing pages from the buffer pool and merging data from the change buffer.
# 根据您的服务器IOPS能力适当调整
# 一般配普通SSD盘的话，可以调整到 10000 - 20000
# 配置高端PCIe SSD卡的话，则可以调整的更高，比如 50000 - 80000
innodb_io_capacity = 20000
innodb_io_capacity_max = 60000

# Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent.
# A setting of 0 turns innodb_flush_neighbors off and no other dirty pages are flushed from the buffer pool.
# A setting of 1 flushes contiguous dirty pages in the same extent from the buffer pool.
# A setting of 2 flushes dirty pages in the same extent from the buffer pool.
innodb_flush_neighbors=0

# The number of background threads devoted to the InnoDB purge operation.
# Default Value 4, The maximum is 32.
innodb_purge_threads=4

# The number of page cleaner threads that flush dirty pages from buffer pool instances.
# Default Value 4, Maximum Value 64
innodb_page_cleaners=4

# This configuration option is only relevant if you use multiple InnoDB tablespaces.
innodb_open_files=65535

# InnoDB tries to flush data from the buffer pool so that the percentage of dirty pages does not exceed this value.
innodb_max_dirty_pages_pct=50

# Defines the method used to flush data to InnoDB data files and log files, which can affect I/O throughput.
# On Unix-like systems, the default value is fsync. On Windows, the default value is unbuffered.
# https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_flush_method
innodb_flush_method=normal

# A parameter that influences the algorithms and heuristics for the flush operation for the InnoDB buffer pool.
# Default 1024
innodb_lru_scan_depth=4000

# Specifies how to generate and verify the checksum stored in the disk blocks of InnoDB tablespaces.
# The default value for innodb_checksum_algorithm is crc32.
# Valid Values: innodb,crc32,none,strict_innodb,strict_crc32,strict_none
innodb_checksum_algorithm=crc32

# The length of time in seconds an InnoDB transaction waits for a row lock before giving up.
# innodb_lock_wait_timeout applies to InnoDB row locks.
innodb_lock_wait_timeout=10

# InnoDB rolls back only the last statement on a transaction timeout by default.
# If --innodb_rollback_on_timeout is specified, a transaction timeout causes InnoDB to abort and roll back the entire transaction.
# Default Value	OFF
innodb_rollback_on_timeout=ON

# When this option is enabled, information about all deadlocks in InnoDB user transactions is recorded in the mysqld error log.
# Otherwise, you see information about only the last deadlock, using the SHOW ENGINE INNODB STATUS command.
# Default Value	OFF
innodb_print_all_deadlocks=ON

# When innodb_file_per_table is enabled (the default), InnoDB stores the data and indexes for each newly created table
# in a separate .ibd file instead of the system tablespace.
innodb_file_per_table=ON

# Specifies an upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.
innodb_online_alter_log_max_size=4G

# This option only applies when optimizer statistics are configured to be non-persistent.
# Default Value	OFF
innodb_stats_on_metadata=OFF


# Controls whether InnoDB creates a file named innodb_status.pid in the MySQL data directory.
# If enabled, InnoDB periodically writes the output of SHOW ENGINE INNODB STATUS to this file.
innodb_status_file=ON

# To use the MySQL Performance Schema, it must be enabled at server startup to enable event collection to occur.
# The Performance Schema is enabled by default.
# https://dev.mysql.com/doc/refman/8.0/en/performance-schema-startup-configuration.html
performance_schema=ON
# To control an instrument at server startup, use an option of this form:
# --performance-schema-instrument='instrument_name=value'
performance_schema_instrument='%=ON'

# https://dev.mysql.com/doc/refman/8.0/en/innodb-information-schema-metrics-table.html
# The INNODB_METRICS table stores data for InnoDB performance and resource-related counters:
innodb_monitor_enable="module_innodb"
innodb_monitor_enable="module_server"
innodb_monitor_enable="module_dml"
innodb_monitor_enable="module_ddl"
innodb_monitor_enable="module_trx"
innodb_monitor_enable="module_os"
innodb_monitor_enable="module_purge"
innodb_monitor_enable="module_log"
innodb_monitor_enable="module_lock"
innodb_monitor_enable="module_buffer"
innodb_monitor_enable="module_index"
innodb_monitor_enable="module_ibuf_system"
innodb_monitor_enable="module_buffer_page"
# innodb_monitor_enable="module_adapti4ve_hash"


# The default transaction isolation level. Defaults to REPEATABLE-READ.
# transaction-isolation = {READ-UNCOMMITTED | READ-COMMITTED | REPEATABLE-READ | SERIALIZABLE}
transaction_isolation=READ-COMMITTED

#
innodb_adaptive_hash_index=OFF